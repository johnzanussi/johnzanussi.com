@import "tailwindcss";
@source "../../astro.config.ts";

@custom-variant dark (&:where(html[data-theme="dark"], html[data-theme="dark"] *));
@custom-variant first-heading (&:where(section:first-child :first-child:is(h1, h2, h3, h4, h5, h6)));
@custom-variant active (&:is(.active));
@custom-variant footer-nav (&:where(body.footer-nav, body.footer-nav *));

@theme {
    --font-sans: "Inter Variable", sans-serif;
    --font-mono: "Roboto Mono Variable", monospace;

    /* Post Cards */
    --transform-scale-102: scale(1.02);

    /* Font Size */
    --text-3xl: 2rem; /* 32px */
    --text-7xl: 4rem; /* 64px */

    /* Not sure this is set right yet */
    --max-width-screen-xl: 69rem;
    /* --max-width-prose: 48rem; */

    /* Colors */
    --color-ocean-50: #dbf6ff;
    --color-ocean-100: #b8edff;
    --color-ocean-200: #9AC4D2;
    --color-ocean-300: #3dcfff;
    --color-ocean-400: #14c4ff;
    --color-ocean-500: #00ace6;
    --color-ocean-600: #13a0d1;
    --color-ocean-700: #0d7092;
    --color-ocean-800: #1f3749;
    --color-ocean-900: #00222e;
    --color-ocean-950: #000f14;

    /* https://www.tints.dev/wave/0C5295 */
    --color-wave-50: #ebf5ff;
    --color-wave-100: #d1e9ff;
    --color-wave-200: #a8d5ff;
    --color-wave-300: #7abfff;
    --color-wave-400: #52abff;
    --color-wave-500: #2495ff;
    --color-wave-600: #0081fa;
    --color-wave-700: #0069cc;
    --color-wave-800: #0c5294;
    --color-wave-900: #002a52;
    --color-wave-950: #001529;

    /* Custom */
    --background-image-gradient-white: linear-gradient(
        45deg,
        hsl(210deg 17% 98%) 14%,
        hsl(209deg 50% 95%) 61%,
        hsl(209deg 62% 93%) 77%,
        hsl(208deg 68% 91%) 87%,
        hsl(208deg 72% 89%) 94%,
        hsl(207deg 74% 86%) 99%,
        hsl(207deg 76% 84%) 101%,
        hsl(206deg 77% 81%) 101%
    );

    --background-image-gradient-blue: linear-gradient(
        45deg,
        hsl(210deg 18% 7%) 14%,
        hsl(209deg 29% 8%) 61%,
        hsl(209deg 38% 9%) 77%,
        hsl(209deg 49% 10%) 87%,
        hsl(208deg 60% 11%) 94%,
        hsl(207deg 72% 11%) 99%,
        hsl(207deg 84% 12%) 101%,
        hsl(206deg 97% 12%) 101%
    );

    --animate-spin-once: spin-once 600ms forwards;

    @keyframes spin-once {
        0% {
            transform: rotate(0deg);
            animation-timing-function: linear;
        }
        70% {
            transform: rotate(360deg);
            animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
        }
        100% {
            transform: rotate(360deg);
        }

    }
}

@utility word-spacing-* {
    word-spacing: calc(var(--spacing) * --value(integer));
}

@utility -word-spacing-* {
    word-spacing: calc(var(--spacing) * --value(integer) * -1);
}

@utility container {
    @apply mx-auto px-6;
    max-width: 1100px;
}

@utility mask-wave {
    mask-image :url('/src/assets/mask-divider-wave.png');
    mask-repeat: no-repeat;
}

@utility mask-wave-top {
    mask-image:
        url('/src/assets/mask-divider-wave.png'),
        linear-gradient(#000 0 0);
    mask-repeat: no-repeat;
}

@utility mask-wave-full {
    mask-image: url('/src/assets/mask-divider-wave-full.png');
    mask-repeat: no-repeat;
}

@utility mask-exclude {
    mask-composite: exclude;
}

@utility mask-bottom {
    mask-position: bottom;
}

@utility mask-bottom-* {
    mask-position: calc(--value(integer)px * -1) bottom;
}

@utility -mask-bottom-* {
    mask-position: calc(--value(integer)px * -1) bottom;
}

@utility mask-top {
    mask-position: top;
}


@layer base {

    a {
        transition: color 250ms ease-out,
                    opacity 200ms ease-in-out,
                    border-color 250ms ease-out;
    }

    /* Disable transitions for all elements that don't have a transition class
       Used in the theme toggle */
    .transitioning *:not([class*="transition-"], ::before) {
        @apply !transition-none;
    }

}

@property --offset {
    syntax: '<length>';
    inherits: false;
    initial-value: 3px;
}

@layer components {

    .prose {

        section:first-child > h2 {
            @apply mt-0;
        }

        a {

            @apply font-medium underline decoration-sky-600 underline-offset-(--offset) break-words;

            transition: --offset 250ms;
            text-decoration-skip-ink: none;

            &:hover {
                --offset: .35em;
            }

        }

        p {
            @apply mb-6 leading-7 text-zinc-950 dark:text-[#DEE2E6];
        }

        strong {
            @apply font-bold;
        }

        /* Headings */
        h2 {
            @apply mt-12 mb-6 font-mono font-bold text-3xl pb-2 text-wave-800 border-b border-wave-950 dark:text-wave-300 dark:border-wave-300;
        }

        h3 {
            @apply mt-7 mb-4 font-semibold text-2xl text-sky-800 dark:text-sky-500;
        }

        h4 {
            @apply mt-7 mb-2 font-semibold text-sky-950 dark:text-sky-600 ;
        }

        h5 {
            @apply font-bold;
        }

        /* Lists */
        ul,
        ol {
            @apply my-6 ps-8;

            li {
                @apply my-2 ps-2;
            }

            ul, ol {
                @apply m-0;
            }

            ul {
                @apply list-[circle];
            }
        }

        ol {
            @apply list-decimal;
        }

        ul:not(.contains-task-list) {
            @apply list-disc;
        }

        /* Tables */
        table {

            > :not(caption) > * {

                @apply border-y-1 border-zinc-200 dark:border-zinc-600;

                > * {
                    @apply py-[0.5rem] px-[1rem] bg-gray-50 dark:bg-[#0E1215] dark:text-zinc-200 border-x-1 border-zinc-200 dark:border-zinc-600;
                }
            }

            /* If the second thead is empty (some tables have an empty first th) */
            thead:has(th:nth-child(2):empty) {
                @apply hidden;
            }

            th {
                @apply align-bottom text-start font-sans text-base font-bold;
            }

        }


        blockquote {

            p:last-child,
            p:has(+ cite) {
                @apply m-0;
            }

            cite {
                &:before {
                    content: '\2014\a0'; /* em dash */

                }
                @apply text-sm;

                a {
                    @apply decoration-inherit decoration-dotted;
                }
            }
        }

        kbd {
            @apply min-h-[30px] inline-flex justify-center items-center py-1 px-1.5 bg-white border border-gray-200 font-mono text-sm text-gray-800 shadow-[0px_2px_0px_0px_rgba(0,0,0,0.08)] dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-200 dark:shadow-[0px_2px_0px_0px_rgba(255,255,255,0.1)] rounded-md;
        }

        code {
            @apply py-[.125rem] px-[.275rem] font-mono text-[.8125rem] bg-white dark:bg-zinc-800 text-pink-500 dark:text-pink-300 select-all break-words;
        }

    }

    .expressive-code {
        @apply mb-6;
    }

    .content-aside  {

        a {
            @apply decoration-(--aside-color);
        }

        blockquote {
            border-color: oklch(from var(--aside-color) l c h / calc(alpha - 0.5)) !important;
        }

    }

}