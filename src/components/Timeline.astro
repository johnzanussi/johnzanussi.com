---
import type { ImageMetadata } from 'astro';

interface Role {
    timeframe: string;
    title: string;
    egg?: {
        href: string;
        title: string;
    };
}

interface Era {
    color: string;
    colorDark?: string;
    image: ImageMetadata;
    link: string;
    roles: Role[];
    startYear: string;
    title: string;
}

export interface Props {
    timeline: Era[];
    class?: string;
    bulletSize?: number;
}

import { Image } from 'astro:assets';
import Link from '@/components/Link.astro';
import Icon from '@/components/Icon.astro';
import IconLink from '@/components/IconLink.astro';

const {
    timeline,
    class: className = '',
    bulletSize = 60,
} = Astro.props;
---

<div class:list={['timeline', className]}>

    {timeline.map(era => {
        const {
            color,
            colorDark,
            image,
            link,
            roles,
            startYear,
            title,
        } = era;

        return (

            <div
                class="flex gap-x-4"
                style={{
                    '--timeline-era-color': `light-dark(${color}, ${colorDark || color})`,
                    '--timeline-bullet-height': `${bulletSize}px`,
                }}
            >

                <span class="text-end text-gray-600 dark:text-zinc-300 text-sm leading-(--timeline-bullet-height)">
                    {startYear}
                </span>

                <div class="relative after:block after:absolute after:w-1 after:bg-(--timeline-era-color) after:h-full after:left-1/2 after:-ml-1 after:top-0 after:z-0">
                    <Link href={link}>
                        <Image
                            src={image}
                            alt={title}
                            width={bulletSize}
                            height={bulletSize}
                            class="rounded-full border-4 border-(--timeline-era-color) shadow relative z-1"
                        />
                    </Link>
                </div>

                <div class="era position-relative d-flex pb-4">

                    <div>

                        <IconLink
                            href={link}
                            class="block text-xl font-bold text-(--timeline-era-color) hover:opacity-75 leading-(--timeline-bullet-height) no-underline"
                            icon="tabler:external-link"
                            iconClass="text-xs"
                            iconPosition="end">
                            {title}
                        </IconLink>

                        {roles.map(({ title, timeframe, egg }) => (

                            <Fragment>

                                <p class="text-sm text-zinc-600 dark:text-zinc-400 m-0">
                                    {timeframe}
                                </p>

                                <p class="font-medium mb-5">
                                    {title}
                                    {!!egg && (
                                        <Link
                                            href={egg.href}
                                            title={egg.title}
                                            class="text-pink-600 dark:text-pink-400"
                                        >
                                            <Icon icon="tabler:egg-cracked" />
                                        </Link>
                                    )}
                                </p>

                            </Fragment>

                        ))}

                    </div>

                </div>

            </div>

        );

    })}

</div>
