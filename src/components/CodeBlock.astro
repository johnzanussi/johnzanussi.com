---
import type { BuiltinLanguage, SpecialLanguage } from 'shikiji';
import { getHighlighter } from 'shikiji';

import CopyToClipboard from '@/components/CopyToClipboard.astro';
import Link from '@/components/Link.astro';

import '@/styles/code-block.scss';

export interface Props {
    code: string;
    lang: BuiltinLanguage | SpecialLanguage;
    filename?: string;
    url?: string;
    title?: string;
}

const {
    code,
    lang,
    filename = '',
    url = '',
    title = '',
} = Astro.props;

const showHeader = !!(filename || url);

const themes = {
    light: 'github-light',
    dark: 'github-dark',
};

const shiki = await getHighlighter({
    langs: [lang],
    themes: Object.values(themes),
});

const codeHtml = shiki.codeToHtml(code, {
    lang: lang,
    themes: themes,
});
---

<figure class="code-block rounded-1 border mb-3">
    {showHeader && (
        <figcaption class="py-2 px-4 border-bottom overflow-auto text-body-secondary font-monospace">
            {filename}

            {url && (
                <Link href={url}>
                    {title.replace(/-/g, ' ') || url}
                </Link>
            )}
        </figcaption>
    )}

    <div class="position-relative p-4 pb-0">

        {!!lang && (
            <div class="code-language position-absolute top-0 end-0 px-2 py-1 font-monospace border-bottom-start">
                {lang}
            </div>
        )}

        <div
            class="m-0 p-0 pb-4"
            set:html={codeHtml}
        />

        <CopyToClipboard
            class="position-absolute end-0 me-1"
            value={code}
        />

    </div>

</figure>
