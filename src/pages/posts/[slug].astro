---
import {
    getDateSortedCollection,
    getSiblingItems,
    getPostUrl,
    getCollectionUrl,
} from '@utils/collections';

import { getItemImagePath, getRenderedImage } from '@utils/images';
import { absoluteUrl } from '@utils/urls';

import DividerLayout from '@layouts/DividerLayout.astro';

import AmazonDisclosure from '@components/AmazonDisclosure.astro';
import Comments from '@components/Comments.astro';
import DateFormat from '@components/DateFormat.astro';
import DraftBadge from '@components/DraftBadge.astro';
import EnjoyCTA from '@components/EnjoyCTA.astro';
import Markdown from '@components/Markdown.astro';
import PostPagination from '@components/PostPagination.astro';

import ContentAside from '@components/ContentAside.astro';
import Image from '@components/Image.astro';

export async function getStaticPaths() {

    const posts = await getDateSortedCollection('posts');

    return posts.map(post => ({
        params: {
            slug: post.slug,
        },
        props: {
            post
        },
    }));

}

const { post } = Astro.props;
const {
    Content,
    headings,
    remarkPluginFrontmatter: data,
} = await post.render();

const { slug } = post;

const {
    title,
    date,
    excerpt,
    coverImage,
    draft,
    minutesRead,
    hasAmazonLinks = false,
    hiddenIntro = false,
} = data;

const postUrl = absoluteUrl(getPostUrl(slug));

const ogImageSrc = await getRenderedImage(
    getItemImagePath(slug, coverImage.url, 'posts')
);

const metadata = {
    title,
    url: postUrl,
    description: excerpt,
    image: absoluteUrl(ogImageSrc),
    ogType: 'article',
    publishDate: date,
    breadcrumbs: [
        {
            title: 'Posts',
            url: absoluteUrl(getCollectionUrl('posts')),
        },
    ],
};

const siblingPosts = await getSiblingItems('posts', post);
---
<DividerLayout
    metadata={metadata}
    headings={headings}
>

    <Fragment slot="header">

        <div class="mb-3 mw-md-85p">

            <Image
                src={getItemImagePath(slug, coverImage.url, 'posts')}
                width={coverImage.width}
                height={coverImage.height}
                alt={title}
                widths={[576, 768, 992, 1200, 1400, 1600]}
                class="img-fluid rounded shadow"
                loading="eager"
            />

        </div>

        <p>

            <DateFormat
                date={date}
                class="text-body-secondary"
            />

            <span class="ms-3 small text-body-tertiary">
                {minutesRead}
            </span>

            {draft && (
                <DraftBadge class="ms-2" />
            )}

        </p>

        <h1 class="mb-0 display-3">
            {title}
        </h1>

    </Fragment>

    <Fragment slot="main">

        <article class:list={[
            'content-container',
            {
                'hide-intro-heading': hiddenIntro,
            }
        ]}>

            <Markdown Content={Content} />

            {hasAmazonLinks && <AmazonDisclosure />}

            <EnjoyCTA />

            <PostPagination posts={siblingPosts} />

            <h2 id="comments">
                Comments
            </h2>

            <Comments
                id={slug}
                url={postUrl}
                title={title}
            />

        </article>

        {headings.length > 0 && <ContentAside headings={headings} />}

    </Fragment>

</DividerLayout>
