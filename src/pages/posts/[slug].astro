---
import {
    getDateSortedCollection,
    getSiblingItems,
    getPostUrl,
    getCollectionUrl,
} from '@/utils/collections';

import { absoluteUrl } from '@/utils/urls';
import { getImageSrc } from '@/utils/images';

import DividerLayout from '@/layouts/DividerLayout.astro';

import AmazonDisclosure from '@/components/AmazonDisclosure.astro';
import Comments from '@/components/Comments.astro';
import DateFormat from '@/components/DateFormat.astro';
import DraftBadge from '@/components/DraftBadge.astro';
import EnjoyCTA from '@/components/EnjoyCTA.astro';
import Markdown from '@/components/Markdown.astro';
import PostPagination from '@/components/PostPagination.astro';

import ContentSidebar from '@/components/ContentSidebar.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {

    const posts = await getDateSortedCollection('posts');

    return posts.map(post => ({
        params: {
            slug: post.slug,
        },
        props: {
            post
        },
    }));

}

const { post } = Astro.props;
const {
    Content,
    headings,
    remarkPluginFrontmatter: data,
} = await post.render();

const { slug, data: { cover } } = post;

const {
    title,
    date,
    excerpt,
    draft,
    minutesRead,
    hasAmazonLinks = false,
    hiddenIntro = false,
} = data;

const postUrl = absoluteUrl(getPostUrl(slug));

const coverImageSrc = await getImageSrc(cover);

const metadata = {
    title,
    url: postUrl,
    description: excerpt,
    image: coverImageSrc,
    ogType: 'article',
    publishDate: date,
    breadcrumbs: [
        {
            title: 'Posts',
            url: absoluteUrl(getCollectionUrl('posts')),
        },
    ],
};

const siblingPosts = await getSiblingItems('posts', post);
---
<DividerLayout metadata={metadata}>

    <Fragment slot="header">

        <div class="mb-3 mw-md-85p">

            <Image
                src={cover}
                width={cover.width}
                height={cover.height}
                alt={title}
                widths={[576, 768, 992, 1200, 1400, 1600]}
                sizes="(min-width: 1680px) 958px, (min-width: 1200px) calc(73.91vw - 269px), (min-width: 780px) calc(85vw - 315px), calc(100vw - 32px)"
                class="img-fluid rounded shadow"
                loading="eager"
            />

        </div>

        <p>

            <DateFormat
                date={date}
                class="text-body-secondary"
            />

            <span class="ms-3 small text-body-tertiary">
                {minutesRead}
            </span>

            {draft && (
                <DraftBadge class="ms-2" />
            )}

        </p>

        <h1 class="mb-0 display-3">
            {title}
        </h1>

    </Fragment>

    <Fragment slot="main">

        <article class:list={[
            'content-container',
            {
                'hide-intro-heading': hiddenIntro,
            }
        ]}>

            <Markdown Content={Content} />

            {hasAmazonLinks && <AmazonDisclosure />}

            <EnjoyCTA />

            <PostPagination posts={siblingPosts} />

            <section id="comments">

                <h2 id="h-comments">
                    Comments
                </h2>

                <Comments
                    id={slug}
                    url={postUrl}
                    title={title}
                />

            </section>

        </article>

        <ContentSidebar headings={headings} url={postUrl} />

    </Fragment>

</DividerLayout>
