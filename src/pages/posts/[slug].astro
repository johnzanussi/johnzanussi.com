---
import {
    getDateSortedCollection,
    getSiblingItems,
    getPostUrl,
    getCollectionUrl,
} from '@/utils/collections';

import { absoluteUrl } from '@/utils/urls';
import { getImageSrc } from '@/utils/images';

import Layout from '@/layouts/Layout.astro';

import AmazonDisclosure from '@/components/AmazonDisclosure.astro';
import Comments from '@/components/Comments.astro';
import DateFormat from '@/components/DateFormat.astro';
import DraftBadge from '@/components/DraftBadge.astro';
import EnjoyCTA from '@/components/EnjoyCTA.astro';
import Markdown from '@/components/Markdown.astro';
import PostPagination from '@/components/PostPagination.astro';

import ContentSidebar from '@/components/ContentSidebar.astro';
import { render } from 'astro:content';
import { Image } from 'astro:assets';
import Emoji from '@/components/Emoji.astro';

export async function getStaticPaths() {

    const posts = await getDateSortedCollection('posts');

    return posts.map(post => ({
        params: {
            slug: post.id,
        },
        props: {
            post
        },
    }));

}

const { post } = Astro.props;
const {
    Content,
    headings,
    remarkPluginFrontmatter: data,
} = await render(post);

const { id, data: { cover } } = post;

const {
    title,
    date,
    excerpt,
    draft,
    minutesRead,
    hasAmazonLinks = false,
    hiddenIntro = false,
} = data;

const postUrl = absoluteUrl(getPostUrl(id));

const coverImageSrc = await getImageSrc(cover);

const metadata = {
    title,
    url: postUrl,
    description: excerpt,
    image: coverImageSrc,
    ogType: 'article',
    publishDate: date,
    breadcrumbs: [
        {
            title: 'Posts',
            url: absoluteUrl(getCollectionUrl('posts')),
        },
    ],
};

const siblingPosts = await getSiblingItems('posts', post);
const includeSidebar = headings && !!headings.length;
---
<Layout metadata={metadata} class="is-post-layout">

    <div
        data-bs-theme="dark"
        class="post-header mw-1600 mx-auto post-header bg-transparent border-0 rounded-0 ratio ratio-16x9">

        <div>

            <Image
                src={cover}
                width={cover.width}
                height={cover.height}
                alt={title}
                widths={[576, 768, 992, 1200, 1400, 1600]}
                sizes="(min-width: 1680px) 958px, (min-width: 1200px) calc(73.91vw - 269px), (min-width: 780px) calc(85vw - 315px), calc(100vw - 32px)"
                loading="eager"
            />

            <div class="card-img-overlay start-0 end-0 d-flex align-items-end">

                <div class="content-container p-3">

                    <h1 class="mb-3 display-3">
                        {title}
                    </h1>

                    <p>

                        <Emoji label="calendar">üóìÔ∏è</Emoji>
                        <DateFormat
                            date={date}
                            class="text-light"
                        />

                        <span class="small mx-2 text-body-secondary">
                            &#x2022;
                        </span>

                        <span class="text-body-secondary">
                            <Emoji label="stopwatch" class="me-1">‚è±Ô∏è</Emoji> {minutesRead}
                        </span>

                        {draft && (
                            <DraftBadge class="ms-2" />
                        )}

                    </p>

                </div>

            </div>

        </div>

    </div>

    <div class="d-flex content-container flex-column-reverse flex-xxl-row">

        <article class:list={[
            'post-content',
            {
                'hide-intro-heading': hiddenIntro,
            }
        ]}>

            <Markdown Content={Content} />

            {hasAmazonLinks && <AmazonDisclosure />}

            <EnjoyCTA />

            <PostPagination posts={siblingPosts} />

            <section id="comments">

                <h2 id="h-comments">
                    Comments
                </h2>

                <Comments
                    id={id}
                    url={postUrl}
                    title={title}
                />

            </section>

        </article>

        {includeSidebar && (
            <ContentSidebar headings={headings} url={postUrl} />
        )}

    </div>

</Layout>
