---
import {
    getDateSortedCollection,
    getSiblingItems,
    getPostUrl,
    getCollectionUrl,
} from '@/utils/collections';

import { absoluteUrl } from '@/utils/urls';
import { getImageSrc } from '@/utils/images';

import Layout from '@/layouts/Layout.astro';

import AmazonDisclosure from '@/components/AmazonDisclosure.astro';
import Comments from '@/components/Comments.astro';
import DateFormat from '@/components/DateFormat.astro';
import DraftBadge from '@/components/DraftBadge.astro';
import EnjoyCTA from '@/components/EnjoyCTA.astro';
import Markdown from '@/components/Markdown.astro';
import PostPagination from '@/components/PostPagination.astro';

import ContentSidebar from '@/components/ContentSidebar.astro';
import { render } from 'astro:content';
import { Image } from 'astro:assets';
import Emoji from '@/components/Emoji.astro';

export async function getStaticPaths() {

    const posts = await getDateSortedCollection('posts');

    return posts.map(post => ({
        params: {
            slug: post.id,
        },
        props: {
            post
        },
    }));

}

const { post } = Astro.props;
const {
    Content,
    headings,
    remarkPluginFrontmatter: data,
} = await render(post);

const { id, data: { cover } } = post;

const {
    title,
    date,
    excerpt,
    draft,
    minutesRead,
    hasAmazonLinks = false,
    hiddenIntro = false,
} = data;

const postUrl = absoluteUrl(getPostUrl(id));

const coverImageSrc = await getImageSrc(cover);

const metadata = {
    title,
    url: postUrl,
    description: excerpt,
    image: coverImageSrc,
    ogType: 'article',
    publishDate: date,
    breadcrumbs: [
        {
            title: 'Posts',
            url: absoluteUrl(getCollectionUrl('posts')),
        },
    ],
};

const siblingPosts = await getSiblingItems('posts', post);
const includeSidebar = headings && !!headings.length;
---
<Layout
    metadata={metadata}
    headerClass="has-photo-bg"
    class="is-post-layout"
>

    <div
        data-bs-theme="dark"
        class="w-full bg-cover bg-no-repeat bg-center bg-ocean-200 dark:bg-ocean-800 sm:mt-[-131px] mask-bottom mask-wave-full"
        style={{ backgroundImage: `url('${coverImageSrc}')` }}>

        <div class="backdrop-brightness-50 backdrop-blur-lg">

            <div class="max-w-[1600px] min-h-[500px] mx-auto aspect-video">

                <Image
                    src={cover}
                    width={cover.width}
                    height={cover.height}
                    alt={title}
                    widths={[576, 768, 992, 1200, 1400, 1600]}
                    sizes="(min-width: 1680px) 958px, (min-width: 1200px) calc(73.91vw - 269px), (min-width: 780px) calc(85vw - 315px), calc(100vw - 32px)"
                    loading="eager"
                    class="max-w-full h-full object-cover"
                />

            </div>

        </div>

    </div>

    <div class="container mb-12">

        <div class="post-content -mt-5 2xl:max-w-full">

            <h1 class="font-mono font-base text-wave-800 dark:text-dune-400 mb-3 xl:text-7xl -word-spacing-3 leading-tight">
                {title}
            </h1>

            <p class="text-zinc-600 dark:text-zinc-400">

                <Emoji label="calendar">üóìÔ∏è</Emoji>

                <DateFormat date={date} />

                <span class="text-xs mx-2">
                    &#x2022;
                </span>

                <Emoji label="stopwatch" class="me-1">‚è±Ô∏è</Emoji> {minutesRead}

                {draft && (
                    <DraftBadge class="ms-2" />
                )}

            </p>

        </div>

    </div>

    <div class="flex container flex-col-reverse 2xl:flex-row">

        <article class:list={[
            'post-content max-w-[48rem]',
            {
                '**:first-heading:hidden': hiddenIntro,
            }
        ]}>

            <Markdown Content={Content} />

            {hasAmazonLinks && <AmazonDisclosure />}

            <EnjoyCTA />

            <PostPagination posts={siblingPosts} />

            <section id="comments">

                <h2 id="h-comments">
                    Comments
                </h2>

                <Comments
                    id={id}
                    url={postUrl}
                    title={title}
                />

            </section>

        </article>

        {includeSidebar && (
            <ContentSidebar headings={headings} url={postUrl} />
        )}

    </div>

</Layout>
